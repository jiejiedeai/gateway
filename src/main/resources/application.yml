server:
  port: 10000

eureka:
  instance:
    appname: ${spring.application.name}  #在eureka服务上注册的应用程序组的名字，默认为unknow
    non-secure-port: ${server.port:80} #获取该实例应该接收通信的非安全端口。默认为80
    prefer-ip-address: true  #将ip注册到eureka不用主机名
    lease-renewal-interval-in-seconds: 3 #eureka客户需要多长时间发送心跳给eureka服务器，表明它仍然活着,默认为30秒
    LeaseExpirationDurationInSeconds: 5 #Eureka服务器在接收到实例的最后一次发出的心跳后，需要等待多久才可以将此实例删除，默认为90秒
    metadata-map: #获取与此实例相关联的元数据(key,value)。这个信息被发送到eureka服务器，其他实例可以使用。
      instanceId: instanceId:${spring.application.name}:${random.value}
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
        #defaultZone中填写的URL必须包括后缀/eureka，否则各eureka server之间不能通信
        #defaultZone为默认的Zone，来源于AWS的概念。区域（Region）和可用区（Availability Zone,AZ）是AWS的另外两个概念。区域是指服务器所在的区域，
      #比如北美洲、南美洲、欧洲和亚洲等，每个区域一般由多个可用区组成。 在本案例中defaultZone是指Eureka Server的注册地址。

api:
  boot:
    swagger:
      enable: true
      description: securityAPI文档
      version: 1.0
      license: ApiBoot
      license-url: http://apiboot.minbox.io/zh-cn/
      contact:
        name: QP

spring:
  application:
    name: gateway
  profiles:
    active: local
  cloud:
    gateway:
      globalcors: #跨域
        cors-configurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods:
              - "*"
      discovery:
        locator:
          enabled: true #使用服务发现客户端接口DiscoveryClient，从服务注意中心获取服务注册信息，然后配置相应的路由。注意，需要在配置中添加如下配置开启这个功能
      default-filters:
        - name: Hystrix
          args:
            name: fallbackcmd
            fallbackUri: forward:/hystrix/fallback
      routes:
        - id: producer-Path #随意起名字，不重复即可
          uri: lb://producer  #路由到的目的服务
          predicates:
            - Path=/producer/** #拦截路径前端为producer的请求
          filters:
            - StripPrefix=1 #去掉前缀，在此处是去掉/producer =2 就是去掉两个例如/user/test/search /search
        - id: authority-server
          uri: lb://security-authentication
          predicates:
            - Path=/authority/**
          filters:
            - StripPrefix=1

hystrix:
  command:
    default:  #default全局有效，service id指定应用有效
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 1000 #断路器超时时间，默认1000ms